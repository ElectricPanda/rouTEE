// Enclave.edl - Top EDL file: contains the enclave interface (list of ecalls and ocalls)

enclave {

    trusted {
        // define ECALLs here
        
        public void printf_helloworld();
        public int ecall_set_routing_fee(unsigned long long fee);
        public int ecall_set_routing_fee_address([in, size=fee_addr_len] const char* fee_address, int fee_addr_len);
        public int ecall_create_channel([in, size=tx_id_len] const char* tx_id, int tx_id_len, unsigned int tx_index);
        public void ecall_print_state();
        public int ecall_settle_balance([in, size=receiver_addr_len] const char* receiver_address, int receiver_addr_len);
        public int ecall_do_multihop_payment([in, size=sender_addr_len] const char* sender_address, int sender_addr_len, [in, size=receiver_addr_len] const char* receiver_address, int receiver_addr_len, unsigned long long amount, unsigned long long fee);
        public int ecall_make_owner_key([user_check] char* sealed_owner_private_key, [in, out] int* sealed_key_len);
        public int ecall_load_owner_key([in, size=sealed_key_len] const char* sealed_owner_private_key, int sealed_key_len);
        public int ecall_seal_state([user_check] char* sealed_state, [in, out] int* sealed_state_len);
        public int ecall_load_state([in, size=sealed_state_len] const char* sealed_state, int sealed_state_len);
    };

    untrusted{
        // define OCALLs here

        // invoke OCall to display string buffer inside the enclave
        // [in]: copy the string buffer to App outside
        // [string]: specifies 'str' is a NULL terminated buffer
        void ocall_print_string([in, string] const char* str);
    };

};
